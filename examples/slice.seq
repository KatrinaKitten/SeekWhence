; Sequence slices
; Creates a view of a sequence which starts from a different index

; A slice is not itself a sequence, just a view of one; changing the definition
;   of the underlying sequence will also change the slice. However, a slice does
;   keep a reference to its sequence, even if the sequence goes out of scope.

sequence indices = n

set slice = indices::10
print slice
print slice:4            ; Access a slice saved to a variable
print indices::10:4      ; Or directly
print slice::4           ; Slicing a slice gives a new slice of the original, with the indices added
print [unslice slice]    ; The unslice function can retrieve the original sequence from a slice

; Looping over a slice
for 10 of indices::10 as i do print i
for 10 of slice as i do print i

; Slice scope
function sliceScope {
  sequence outOfScope = n
  return outOfScope::100
}

for 10 of [sliceScope] as i do print i
;for 10 of outOfScope as i do print i   ; ERROR: Can't iterate over undefined sequence outOfScope